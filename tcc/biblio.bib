@Article{Bosshart2014,
    author           = {Bosshart, Pat and Daly, Dan and Gibb, Glen and Izzard, Martin and McKeown, Nick and Rexford, Jennifer and Schlesinger, Cole and Talayco, Dan and Vahdat, Amin and Varghese, George and Walker, David},
    journal          = {ACM SIGCOMM Computer Communication Review},
    title            = {{P4: Programming Protocol-independent Packet Processors}},
    year             = {2014},
    issn             = {0146-4833},
    month            = jul,
    number           = {3},
    pages            = {87--95},
    volume           = {44},
    abstract         = {P4 is a high-level language for programming protocol-independent packet processors. P4 works in conjunction with SDN control protocols like OpenFlow. In its current form, OpenFlow explicitly specifies protocol headers on which it operates. This set has grown from 12 to 41 fields in a few years, increasing the complexity of the specification while still not providing the flexibility to add new headers. In this paper we propose P4 as a strawman proposal for how OpenFlow should evolve in the future. We have three goals: (1) Reconfigurability in the field: Programmers should be able to change the way switches process packets once they are deployed. (2) Protocol independence: Switches should not be tied to any specific network protocols. (3) Target independence: Programmers should be able to describe packet-processing functionality independently of the specifics of the underlying hardware. As an example, we describe how to use P4 to configure a switch to add a new hierarchical label.},
    acmid            = {2656890},
    address          = {New York, NY, USA},
    creationdate     = {2022-06-01T12:30:50},
    doi              = {10.1145/2656877.2656890},
    file             = {:P4 Basic/Bosshart2014P4. Bosshart. P4. SIGCOMM CCR 2014.pdf:PDF},
    groups           = {Alexandre:1},
    issue_date       = {July 2014},
    keywords         = {p4, protocol-independent, reconfigurability, sdn},
    modificationdate = {2022-06-01T12:30:50},
    numpages         = {9},
    publisher        = {ACM},
    ranking          = {rank5},
    readstatus       = {read},
}

@MastersThesis{Ilha2022,
    author  = {Alexandre Ilha},
    title   = {{Towards a General Approach for Cyberattack Detection Using Programmable Data Planes}},
    school  = {Universidade Federal do Rio Grande do Sul},
    year    = {2022},
}

@article{Paxson1999,
    title = {Bro: a system for detecting network intruders in real-time},
    journal = {Computer Networks},
    volume = {31},
    number = {23},
    pages = {2435-2463},
    year = {1999},
    issn = {1389-1286},
    doi = {https://doi.org/10.1016/S1389-1286(99)00112-7},
    url = {https://www.sciencedirect.com/science/article/pii/S1389128699001127},
    author = {Vern Paxson},
    keywords = {Network intrusion detection, Passive network monitoring, Network monitoring evasion, Domain-specific languages},
    abstract = {We describe Bro, a stand-alone system for detecting network intruders in real-time by passively monitoring a network link over which the intruder's traffic transits. We give an overview of the system's design, which emphasizes high-speed (FDDI-rate) monitoring, real-time notification, clear separation between mechanism and policy, and extensibility. To achieve these ends, Bro is divided into an `event engine' that reduces a kernel-filtered network traffic stream into a series of higher-level events, and a `policy script interpreter' that interprets event handlers written in a specialized language used to express a site's security policy. Event handlers can update state information, synthesize new events, record information to disk, and generate real-time notifications via syslog. We also discuss a number of attacks that attempt to subvert passive monitoring systems and defenses against these, and give particulars of how Bro analyzes the six applications integrated into it so far: Finger, FTP, Portmapper, Ident, Telnet and Rlogin. The system is publicly available in source code form.}
}

@misc{AboutZeek,
    author= {Jon Siwek},
    year  = {2022},
    title = {About Zeek â€” Book of Zeek (git/master)},
    note  = {\url{https://docs.zeek.org/en/master/about.html}, 
             Last accessed on 2022-07-10},
}

@misc{Hjson,
    author= {Hjson},
    year  = {2022},
    title = {Hjson, a user interface for JSON},
    note  = {\url{https://hjson.github.io/}, 
             Last accessed on 2022-08-05},
}

@InProceedings{Dreger2006DPD,
    author           = {Dreger, Holger and Feldmann, Anja and Mai, Michael and Paxson, Vern and Sommer, Robin},
    booktitle        = {15th {USENIX} Security Symposium (USENIX Security 06)},
    title            = {{Dynamic Application-Layer Protocol Analysis for Network Intrusion Detection}},
    year             = {2006},
    address          = {Vancouver, BC, Canada},
    editor           = {Angelos D. Keromytis},
    month            = jul,
    organization     = {{USENIX} Association},
    pages            = {257--272},
    publisher        = {{USENIX} Association},
    bibsource        = {dblp computer science bibliography, https://dblp.org},
    biburl           = {https://dblp.org/rec/conf/uss/DregerF06.bib},
    creationdate     = {2022-03-16T14:51:16},
    modificationdate = {2022-03-16T14:51:16},
    timestamp        = {Mon, 01 Feb 2021 08:43:12 +0100},
    url              = {https://www.usenix.org/conference/15th-usenix-security-symposium/dynamic-application-layer-protocol-analysis-network},
}